function [SC,A,IDX]=SubregionContours(C,idx,X)
% Get contours enclosing individual subregions.
%
%   - C,idx     : outputs of 'step2_ConstructClosedContour' function.
%   - X         : output generated by the 'step4_GetCortexLayers'
%                 or 'PartitionContour' function.
%
%   - SC        : 1-by-n cell containing contours of n subregions.
%   - A         : 1-by-n array specifying areas enclosed by the individual
%                 subregions.
%   - IDX       : start and end indices for the individual sub-contours.
%
% AUTHOR: Anton Semechko (a.semechko@gmail.com)
% DATE: Mar.2014
%

if nargin<3 || isempty(X) 
    SC={C};
    A=PolyArea(C);
    IDX=idx(:)';
    return
end

if ~iscell(X)    
    m=size(X,3);
    X=mat2cell(X,size(X,1),2,ones(1,m));
end
m=numel(X);
    
Ca=C(idx(3):idx(4),:);
Cb=C(idx(1):idx(2),:);


IDX=ones(m+1,4);
IDX(1,2)=size(Ca,1);
IDX(1,3)=size(Ca,1)+1;


SC=cell(1,m+1);
c=[Ca;X{1}];
IDX(1,4)=size(c,1);
SC{1}=[c;c(1,:)];
for i=1:m
    
    c=flipud(X{i});
    IDX(i+1,2)=size(c,1);
    IDX(i+1,3)=size(c,1)+1;
    if i<m
        c=[c;X{i+1}]; %#ok<*AGROW>
    else
        c=[c;Cb];
    end
    IDX(i+1,4)=size(c,1);
    SC{i+1}=[c;c(1,:)];
    
end


A=zeros(m+1,1);
for i=1:(m+1)
    A(i)=PolyArea(SC{i});
end


function A=PolyArea(C)
% Polygon area

dx=C(1:(end-1),1)-C(2:end,1);
dy=C(2:end,2)+C(1:(end-1),2);
A=sum(dx.*dy)/2;
A=abs(A);

